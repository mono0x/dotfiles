[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'h1mesuke/vim-alignta'
on_cmd = 'Alignta'
hook_add = '''
  xnoremap <silent> <Leader>t: :Alignta <<0 \ /1<CR>
  xnoremap <silent> <Leader>t, :Alignta << -e ,<CR>
  xnoremap <silent> <Leader>t= :Alignta << -e =<CR>
  xnoremap <silent> <Leader>t> :Alignta << -e =><CR>

  xnoremap <silent> <Leader>T: :Alignta >>0 \ /1<CR>
  xnoremap <silent> <Leader>T, :Alignta >> -e ,<CR>
  xnoremap <silent> <Leader>T= :Alignta >> -e =<CR>
  xnoremap <silent> <Leader>T> :Alignta >> -e =><CR>
'''

[[plugins]]
repo = 'Shougo/echodoc'
on_i = 1

[[plugins]]
repo = 'anyakichi/vim-surround'
on_map = [
  '<Plug>Csurround',
  '<Plug>Dsurround',
  '<Plug>ISurround',
  '<Plug>Isurround',
  '<Plug>SurroundRepeat',
  '<Plug>VSurround',
  '<Plug>VgSurround',
  '<Plug>Vgsurround',
  '<Plug>Vsurround',
  '<Plug>Ygssurround',
  '<Plug>Ygsurround',
  '<Plug>Yssurround',
  '<Plug>Ysurround',
]
hook_add = '''
  nmap <unique> ds     <Plug>Dsurround
  nmap <unique> cs     <Plug>Csurround
  nmap <unique> ys     <Plug>Ysurround
  nmap <unique> yS     <Plug>Ysurround$
  nmap <unique> yss    <Plug>Yssurround
  nmap <unique> ygs    <Plug>Ygsurround
  nmap <unique> ygS    <Plug>Ygsurround$
  nmap <unique> ygss   <Plug>Ygssurround
  nmap <unique> ygsgs  <Plug>Ygssurround
  xmap <unique> s      <Plug>Vsurround
  xmap <unique> S      <Plug>VSurround
  xmap <unique> gs     <Plug>Vgsurround
  xmap <unique> gS     <Plug>VgSurround
  imap <unique> <C-S>  <Plug>Isurround
  imap <unique> <C-G>s <Plug>Isurround
  imap <unique> <C-G>S <Plug>ISurround
'''
hook_source = '''
  let g:surround_no_mappings = 1
'''

[[plugins]]
repo = 'LeafCage/yankround.vim'
on_map = '<Plug>'
hook_add = '''
  nmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
  xmap p <Plug>(yankround-p)
  xmap gp <Plug>(yankround-gp)
'''
hook_source = '''
  let g:yankround_use_region_hl = 1
  let g:yankround_region_hl_groupname = 'YankRoundRegion'

  autocmd vimrc_loading ColorScheme * call s:define_region_hl()
  function! s:define_region_hl()
    if &bg=='dark'
      highlight default YankRoundRegion guibg=Brown ctermbg=Brown term=reverse
    else
      highlight default YankRoundRegion guibg=LightRed ctermbg=LightRed term=reverse
    end
  endfunction
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'
on_map = '<Plug>'
hook_add = '''
  map /  <Plug>(incsearch-forward)
  map ?  <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
  map n  <Plug>(incsearch-nohl-n)
  map N  <Plug>(incsearch-nohl-N)
  map *  <Plug>(incsearch-nohl-*)
  map #  <Plug>(incsearch-nohl-#)
  map g* <Plug>(incsearch-nohl-g*)
  map g# <Plug>(incsearch-nohl-g#)
'''
hook_source = '''
  let g:incsearch#magic = '\v'
  let g:incsearch#auto_nohlsearch = 1
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = '<Plug>(openbrowser'
hook_add = '''
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)

  let g:netrw_nogx = 1
'''

[[plugins]]
repo = 'tyru/open-browser-github.vim'
on_cmd = [
  'OpenGithubFile',
  'OpenGithubIssue',
  'OpenGithubProject',
  'OpenGithubPullReq',
]
depends = 'open-browser.vim'
hook_add = '''
  nnoremap <silent> <Leader>gh :OpenGithubFile<CR>
  vnoremap <silent> <Leader>gh :OpenGithubFile<CR>
'''
hook_source = '''
  let g:openbrowser_github_always_use_commit_hash = 1
  let g:openbrowser_github_url_exists_check = 'ignore'
'''

# File types {{{
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = 'markdown'
hook_source = '''
  let g:vim_markdown_liquid=1
  let g:vim_markdown_frontmatter=1
  let g:vim_markdown_folding_disabled=1
'''

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = 'nginx'

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = [ 'javascript', 'markdown' ]

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'
# }}}
